HELP :: #string DONE
Usage: jrc COMMAND [ARGS]

The available commands are:
  new   Create a new game project
  help  Show help for a command

For more information on a specific command, type `jrc help command-name`.
DONE

HELP_HELP :: #string DONE
Usage: jrc help command
DONE

HELP_NEW :: #string DONE
Usage: jrc new project_name
DONE

ERROR_ZERO_ARGUMENTS :: #string DONE
Error: Attempted to compile without any additional command-line arguments.
       Expected at least one argument containing the current working directory.

You're not supposed to compile jrc.jai directly,
but instead add jrc/bin/ to your PATH, and run `jrc`.
DONE

SAMPLE_MAIN_FILE :: #string DONE
// auto-generated by jrc
main :: () {
    print("Hello, world!\n");
}
#import "Basic";
DONE

build :: () {
    defer print("\n");
    set_build_options_dc(.{do_output=false});

    args := compiler_get_command_line_arguments();

    if args.count == 0 {
        print(ERROR_ZERO_ARGUMENTS);
        return;
    }

    cwd := args[0];
    args.data += 1;
    args.count -= 1;

    if !set_working_directory(cwd) {
        print("Error: failed to set the current working directory to \"%\".\n", cwd);
        return;
    }

    if args.count == 0 {
        print(HELP);
        return;
    }

    cmd := args[0];
    args.data += 1;
    args.count -= 1;

    if cmd == {
        case "help";
            if args.count == {
                case 0;
                    print(HELP);
                case 1;
                    if args[0] == {
                        case "help";
                            print("Help: help\n");
                        case "new";
                            print("Help: new\n");
                        case;
                            print("Help: no help information for `%`.\n", cmd);
                    }
                    return;
                case;
                    print("Error: incorrect number of arguments (expected 0 or 1, got %.)\n", args.count);
            }
            return;
        
        case "new";
            if args.count == {
                case 1;
                    project_name := args[0];
                    print("Making new project \"%\"...\n", project_name);
                    if !make_directory_if_it_does_not_exist(project_name) {
                        print("Error: failed to create \"%\" directory for project.\n", project_name);
                        return;
                    }
                    cwd = sprint("%/%", get_working_directory(), project_name);
                    if !set_working_directory(cwd) {
                        print("Error: failed to set the current working directory to \"%\".\n", cwd);
                        return;
                    }
                    if !write_entire_file(sprint("%.jai", project_name), SAMPLE_MAIN_FILE) {
                        print("Error: failed to create \"%\".\n", project_name);
                        return;
                    }
                case;
                    print("Error: incorrect number of arguments (expected 1, got %.)\n", args.count);
            }
    }
}

#run build();

#import "Basic";
#import "Compiler";
#import "File";
